{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contracts/contracts.component.ts","webpack:///src/app/contracts/contracts.component.html","webpack:///src/app/core/material.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/models/contract.ts","webpack:///src/app/models/product.ts","webpack:///src/app/models/user.ts","webpack:///src/app/products/products.component.ts","webpack:///src/app/products/products.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/services/contracts.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","router","route","title","params","subscribe","console","log","localStorage","getItem","navigate","alert","removeItem","toProfile","toContracts","logout","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ContractsComponent","contractsService","contracts","getAllContracts","toPromise","data","contract","newContract","contractnumber","enddate","startdate","status","sfid","push","getProductsByContractId","products","product","newProduct","product_name__c","quantity","totalprice","contract__c","CustomMaterialModule","LoginComponent","loginService","loginUser","username","password","setItem","login","Contract","number","startDate","termDate","Product","name","totalPrice","User","email","phone","mobile","ProductsComponent","ProfileComponent","userService","user","state","getContactById","username__c","homephone","mobilephone","profileForm","nameForm","required","usernameForm","titleForm","emailForm","phoneForm","mobileForm","err","value","updateContact","usenrame","window","location","reload","error","ContractsService","httpClient","endpoint","apiUrl","httpHeader","ErrorEvent","message","userId","get","headers","responseType","pipe","handleError","contractId","providedIn","LoginService","set","check","UserService","put","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContractsComponent } from './contracts/contracts.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n\nconst routes: Routes = [\n  { path: 'products/:contractId', component: ProductsComponent },\n  { path: 'contracts/:id', component: ContractsComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'profile/:id', component: ProfileComponent },\n  {path : '', component : LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n  id: string;\n\n  constructor(private router: Router,private route: ActivatedRoute) {\n\n     this.route.params.subscribe(params => {\n      console.log('The id of this route is: ', params.id);\n      this.id = params.id;\n    });\n\n  }\n\n  toContracts() {\n    if(localStorage.getItem('credential')) {\n      let id = localStorage.getItem('credential');\n      this.router.navigate(['/contracts', id]);\n    } else {\n      alert(\"You're not logged in\");\n    }\n  }\n\n  toProfile() {\n    if(localStorage.getItem('credential')) {\n      let id = localStorage.getItem('credential');\n      this.router.navigate(['/profile', id]);\n    } else {\n      alert(\"You're not logged in\");\n    }\n  }\n\n\n  logout() {\n    if(localStorage.getItem('credential')) {\n      localStorage.removeItem('credential');\n      this.router.navigate(['/login']);\n    }\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>Legarant Assurance</span>\n      <span class=\"example-fill-remaining-space\"></span>\n      <span class=\"align-center\"></span>\n      <span class=\"example-spacer\"></span>\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item (click)=\"toProfile()\">\n      <mat-icon>account_circle</mat-icon>\n      <span>Profile</span>\n    </button>\n    <button mat-menu-item (click)=\"toContracts()\">\n      <mat-icon>receipt</mat-icon>\n      <span>Contracts</span>\n    </button>\n    <button mat-menu-item (click)=\"logout()\">\n      <mat-icon>exit_to_app</mat-icon>\n      <span>Log Out</span>\n    </button>\n  </mat-menu>\n</mat-toolbar>\n<div class=\"content\">\n  <router-outlet></router-outlet>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { CustomMaterialModule } from './core/material.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ContractsComponent } from './contracts/contracts.component';\nimport { ProductsComponent } from './products/products.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProfileComponent,\n    ContractsComponent,\n    ProductsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CustomMaterialModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { VirtualTimeScheduler } from 'rxjs';\nimport { Contract } from '../models/contract';\nimport { Product } from '../models/product';\nimport { ContractsService } from '../services/contracts.service';\n\n@Component({\n  selector: 'app-contracts',\n  templateUrl: './contracts.component.html',\n  styleUrls: ['./contracts.component.scss']\n})\nexport class ContractsComponent implements OnInit {\n\n  id: string;\n  contracts = [];\n\n  constructor(private route: ActivatedRoute, private contractsService: ContractsService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.id = params.id;\n    })\n\n    this.contractsService.getAllContracts(this.id).toPromise()\n    .then((data) => {\n      console.log(data[0]);\n      for(let contract of (data as any)) {\n        let newContract = new Contract(contract.contractnumber, contract.enddate, contract.startdate, contract.status);\n        newContract.id = contract.sfid;\n        this.contracts.push(newContract);\n      }\n\n      for(let contract of this.contracts) {\n        console.log(contract.id);\n        this.contractsService.getProductsByContractId(contract.id).toPromise()\n        .then((data) => {\n          console.log(data);\n          let products = [];\n          for(let product of (data as any)) {\n            let newProduct = new Product(product.product_name__c, product.quantity, product.totalprice, product.contract__c);\n            products.push(newProduct);\n          }\n          contract.products = products;\n        })\n      }\n    })\n  }\n\n  \n\n}\n","<mat-card class=\"contract-card\" *ngFor=\"let contract of contracts\">\n  <mat-card-header>\n    <mat-card-title>{{ contract.contractnumber }}</mat-card-title>\n    <mat-card-subtitle>{{ contract.status }}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-grid-list cols=\"2\" rowHeight=\"50px\">\n      <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Start date</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ contract.startdate | date }}</p></mat-grid-tile>\n      <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">End Date</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ contract.enddate | date }}</p></mat-grid-tile>\n    </mat-grid-list>\n\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let product of contract.products\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{ product.name }}\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-grid-list cols=\"2\" rowHeight=\"50px\">\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Quantity</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ product.quantity }}</p></mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Price</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ product.totalPrice | currency:'EUR' }}</p></mat-grid-tile>\n        </mat-grid-list>\n      </mat-expansion-panel>\n    </mat-accordion>\n    \n    \n  </mat-card-content>\n</mat-card>\n\n","import {NgModule} from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule }from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@NgModule({\n  imports: [\n  CommonModule, \n  MatToolbarModule,\n  MatButtonModule, \n  MatCardModule,\n  MatInputModule,\n  MatDialogModule,\n  MatTableModule,\n  MatMenuModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatGridListModule,\n  MatExpansionModule\n  ],\n  exports: [\n  CommonModule,\n   MatToolbarModule, \n   MatButtonModule, \n   MatCardModule, \n   MatInputModule, \n   MatDialogModule, \n   MatTableModule, \n   MatMenuModule,\n   MatIconModule,\n   MatProgressSpinnerModule,\n   MatGridListModule,\n   MatExpansionModule\n   ],\n})\nexport class CustomMaterialModule { }","import { Component, OnInit } from '@angular/core';\n\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material/dialog'\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  \n  constructor(private router: Router, private loginService: LoginService) { }\n\n  username: string;\n  password: string;\n\n  showSpinner: boolean;\n\n  ngOnInit(): void {\n  }\n\n  async login() : Promise<void> {\n    let id = await this.loginService.loginUser(this.username, this.password).toPromise();\n    console.log(id);\n    if(id !== 'Unauthorized' && id!== '{ \"Error\" : { \"title\": \"The parameters are not correct\"}}') {\n      localStorage.setItem('credential', id);\n      this.router.navigate(['/profile', id]);\n    } else {\n      alert('Bad credentials');\n    }\n  }\n\n}\n","<mat-card class=\"example-card\">\n  <mat-card-header>\n    <mat-card-title>Login</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form class=\"example-form\">\n      <table class=\"example-full-width\" cellspacing=\"0\">\n        <tr>\n          <td>\n            <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required>\n            </mat-form-field>\n          </td>\n        </tr>\n        <tr>\n        <td><mat-form-field class=\"example-full-width\">\n          <input matInput placeholder=\"Password\" [(ngModel)]=\"password\"type=\"password\" name=\"password\" required>\n        </mat-form-field></td>\n      </tr></table>\n    </form>\n    <mat-spinner [style.display]=\"showSpinner ? 'block' : 'none'\"></mat-spinner>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-raised-button (click)=\"login()\" color=\"primary\">Login</button>\n  </mat-card-actions>\n</mat-card>\n","import { User } from \"./user\";\n\nexport class Contract {\n\n  id: string;\n  contractnumber: string;\n  startdate: Date;\n  status: string;\n  user: User;\n  enddate: Date;\n\n  constructor(number?: string, startDate?: Date, termDate?: Date, status?: string) {\n    this.contractnumber = number;\n    this.startdate = startDate;\n    this.enddate = termDate;\n    this.status = status\n  }\n}","import { Contract } from \"./contract\";\n\nexport class Product {\n\n  id: string;\n  name: string;\n  contract: string;\n  quantity: number;\n  totalPrice: number;\n\n  constructor(name?: string, quantity?: number, totalPrice?: number, contract?: string) {\n    this.name = name;\n    this.quantity = quantity,\n    this.totalPrice = totalPrice,\n    this.contract = contract\n  }\n}","export class User {\n  [x: string]: string;\n\n  id: string;\n  name: string;\n  username: string;\n  email: string | null;\n  title: string | null;\n  phone: string | null;\n  mobile: string | null;\n\n  constructor(name?: string, username?: string, email?: string, title?: string, phone?: string, mobile?: string) {\n    this.name = name;\n    this.username = username;\n    this.email = email;\n    this.title = title;\n    this.phone = phone;\n    this.mobile = mobile;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>products works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../models/user';\n\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  id: string;\n  data: any;\n  user: User;\n  state: string;\n  profileForm: FormGroup;\n\n  constructor(private userService: UserService, private route: ActivatedRoute) {\n    this.user = new User();\n   }\n\n  ngOnInit(): void {\n    this.state = 'view';\n\n    this.route.params.subscribe(params => {\n      console.log('The id of this route is: ', params.id);\n      this.id = params.id;\n    });\n\n    this.userService.getContactById(this.id).toPromise()\n    .then((data) => {\n      console.log(data);\n      this.user = new User(data.name, data.username__c, data.email, data.title, data.homephone, data.mobilephone);\n      console.log(this.user);\n\n      this.profileForm = new FormGroup({\n        nameForm:new FormControl(this.user.name, Validators.required),\n        usernameForm:new FormControl(this.user.username, Validators.required),\n        titleForm:new FormControl(this.user.title),\n        emailForm:new FormControl(this.user.email, [Validators.required, Validators.email]),\n        phoneForm:new FormControl(this.user.phone),\n        mobileForm:new FormControl(this.user.mobile)\n      });\n\n\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n\n  editProfile() {\n    this.state = 'edit';\n    console.log('EDIT');\n  }\n\n  cancelEdit() {\n    this.state = 'view';\n  }\n\n  onSubmit() {\n\n    console.log(this.profileForm.value);\n    console.log(this.id);\n\n    this.userService.updateContact(this.id, this.profileForm.value).toPromise()\n    .then(() => {\n      this.user = {\n        id: this.id,\n        name: this.profileForm.value.name,\n        username: this.profileForm.value.usenrame,\n        title: this.profileForm.value.title,\n        email: this.profileForm.value.email,\n        phone: this.profileForm.value.phone,\n        mobile: this.profileForm.value.mobile\n      }\n      window.location.reload();\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n    console.log('submit');\n  }\n\n}\n","<mat-card class=\"example-card\">\n  <mat-card-header>\n    <mat-card-title>Your Profile</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <ng-template [ngIf]=\"state === 'view'\" [ngIfElse]=\"editState\">\n      <mat-grid-list cols=\"2\" rowHeight=\"50px\">\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Name</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ user.name }}</p></mat-grid-tile>\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Username</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ user.username }}</p></mat-grid-tile>\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Title</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n          <ng-template [ngIf]=\"user.title !== null\" [ngIfElse]=\"nullTitle\"><p class=\"value\">{{ user.title }}</p></ng-template>\n          <ng-template #nullTitle><p class=\"nullValue\">[You can add your title]</p></ng-template>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Email</h4></mat-grid-tile><mat-grid-tile class=\"valunullVContainer\">\n          <ng-template [ngIf]=\"user.email !== null\" [ngIfElse]=\"nullemail\"><p class=\"value\">{{ user.email }}</p></ng-template>\n          <ng-template #nullemail><p class=\"nullValue\">[You can add your Email]</p></ng-template>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Phone</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n          <ng-template [ngIf]=\"user.phone !== null\" [ngIfElse]=\"nullphone\"><p class=\"value\">{{ user.phone }}</p></ng-template>\n          <ng-template #nullphone><p class=\"nullValue\">[You can add your Phone number]</p></ng-template>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Mobile</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n          <ng-template [ngIf]=\"user.mobile !== null\" [ngIfElse]=\"nullmobile\"><p class=\"value\">{{ user.mobile }}</p></ng-template>\n          <ng-template #nullmobile><p class=\"nullValue\">[You can add your Mobile number]</p></ng-template>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <mat-card-actions>\n        <button mat-raised-button class=\"editButton\" (click)=\"editProfile()\" color=\"primary\">Edit</button>\n      </mat-card-actions>\n    </ng-template>\n    <ng-template #editState>\n      <form class=\"contact-form\" [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-grid-list cols=\"2\" rowHeight=\"75px\">\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Name</h4></mat-grid-tile>\n          <mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Name\" formControlName=\"nameForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Username</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Username\" formControlName=\"usernameForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Title</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Title\" formControlName=\"titleForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Email</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Email\" formControlName=\"emailForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Phone</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Phone\" formControlName=\"phoneForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Mobile</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Mobile\" formControlName=\"mobileForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <mat-card-actions class=\"actionForm\">\n          <div class=\"buttonsForm\">\n          <button mat-raised-button type=\"submit\" (click)=\"onSubmit()\" color=\"primary\">Save</button>\n          <button mat-raised-button (click)=\"cancelEdit()\" color=\"primary\">Cancel</button>\n          </div>\n        </mat-card-actions>\n      </form>\n    </ng-template>\n  </mat-card-content>\n</mat-card>\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { throwError} from 'rxjs';\nimport { retry, catchError} from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContractsService {\n\n  endpoint = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n  httpHeader = new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n\n  getAllContracts(userId) {\n    console.log(userId);\n    return this.httpClient.get(`${this.endpoint}/contracts/${userId}`,\n      { headers: this.httpHeader, responseType: \"json\" })\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      )\n  }\n\n  getProductsByContractId(contractId) {\n    console.log(contractId);\n    return this.httpClient.get(`${this.endpoint}/products/${contractId}`,\n    { headers: this.httpHeader, responseType: \"json\" })\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { retry, catchError} from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  endpoint = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n  httpHeader = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n  loginUser(username, password): Observable<string> {\n\n    const params = new HttpParams()\n      .set('username', `${username}`)\n      .set('password', `${password}`);\n\n      let check = false;\n\n    return this.httpClient.get<string>(this.endpoint + '/login', { headers: this.httpHeader, params, responseType: \"json\" })\n    .pipe(\n      retry(1),\n      catchError(this.handleError) // then handle the error\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { retry, catchError} from 'rxjs/operators';\nimport { Observable, throwError, Subscription } from 'rxjs';\nimport { User } from '../models/user';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  endpoint = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n  httpHeader = new HttpHeaders({\n    'Content-Type': 'application/json'\n  });\n\n  getContactById(id): Observable<User> {\n    \n    return this.httpClient.get<User>(this.endpoint + `/contact/${id}`, { headers: this.httpHeader, responseType: \"json\" })\n    .pipe(\n      retry(1),\n      catchError(this.handleError) // then handle the error\n    )\n  }\n\n  updateContact(id, user): Observable<User> {\n    console.log(id);\n    return this.httpClient.put<User>(`${this.endpoint}/contact/${id}`, \n    { \n      name: user.nameForm,\n      username: user.usernameForm,\n      title: user.titleForm,\n      email: user.emailForm,\n      phone: user.phoneForm,\n      mobile: user.mobileForm\n    },\n    { headers: this.httpHeader, responseType: \"json\" })\n    .pipe(\n      retry(1),\n      catchError(this.handleError) // then handle the error\n    )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}