{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contracts/contracts.component.ts","./src/app/contracts/contracts.component.html","./src/app/core/material.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/contract.ts","./src/app/models/product.ts","./src/app/models/user.ts","./src/app/products/products.component.ts","./src/app/products/products.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/services/contracts.service.ts","./src/app/services/login.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContractsComponent } from './contracts/contracts.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n\nconst routes: Routes = [\n  { path: 'products/:contractId', component: ProductsComponent },\n  { path: 'contracts/:id', component: ContractsComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'profile/:id', component: ProfileComponent },\n  {path : '', component : LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n  id: string;\n\n  constructor(private router: Router,private route: ActivatedRoute) {\n\n     this.route.params.subscribe(params => {\n      console.log('The id of this route is: ', params.id);\n      this.id = params.id;\n    });\n\n  }\n\n  toContracts() {\n    if(localStorage.getItem('credential')) {\n      let id = localStorage.getItem('credential');\n      this.router.navigate(['/contracts', id]);\n    } else {\n      alert(\"You're not logged in\");\n    }\n  }\n\n  toProfile() {\n    if(localStorage.getItem('credential')) {\n      let id = localStorage.getItem('credential');\n      this.router.navigate(['/profile', id]);\n    } else {\n      alert(\"You're not logged in\");\n    }\n  }\n\n\n  logout() {\n    if(localStorage.getItem('credential')) {\n      localStorage.removeItem('credential');\n      this.router.navigate(['/login']);\n    }\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>Legarant Assurance</span>\n      <span class=\"example-fill-remaining-space\"></span>\n      <span class=\"align-center\"></span>\n      <span class=\"example-spacer\"></span>\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item (click)=\"toProfile()\">\n      <mat-icon>account_circle</mat-icon>\n      <span>Profile</span>\n    </button>\n    <button mat-menu-item (click)=\"toContracts()\">\n      <mat-icon>receipt</mat-icon>\n      <span>Contracts</span>\n    </button>\n    <button mat-menu-item (click)=\"logout()\">\n      <mat-icon>exit_to_app</mat-icon>\n      <span>Log Out</span>\n    </button>\n  </mat-menu>\n</mat-toolbar>\n<div class=\"content\">\n  <router-outlet></router-outlet>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { CustomMaterialModule } from './core/material.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ContractsComponent } from './contracts/contracts.component';\nimport { ProductsComponent } from './products/products.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProfileComponent,\n    ContractsComponent,\n    ProductsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CustomMaterialModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { VirtualTimeScheduler } from 'rxjs';\nimport { Contract } from '../models/contract';\nimport { Product } from '../models/product';\nimport { ContractsService } from '../services/contracts.service';\n\n@Component({\n  selector: 'app-contracts',\n  templateUrl: './contracts.component.html',\n  styleUrls: ['./contracts.component.scss']\n})\nexport class ContractsComponent implements OnInit {\n\n  id: string;\n  contracts = [];\n\n  constructor(private route: ActivatedRoute, private contractsService: ContractsService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.id = params.id;\n    })\n\n    this.contractsService.getAllContracts(this.id).toPromise()\n    .then((data) => {\n      console.log(data[0]);\n      for(let contract of (data as any)) {\n        let newContract = new Contract(contract.contractnumber, contract.enddate, contract.startdate, contract.status);\n        newContract.id = contract.sfid;\n        this.contracts.push(newContract);\n      }\n\n      for(let contract of this.contracts) {\n        console.log(contract.id);\n        this.contractsService.getProductsByContractId(contract.id).toPromise()\n        .then((data) => {\n          console.log(data);\n          let products = [];\n          for(let product of (data as any)) {\n            let newProduct = new Product(product.product_name__c, product.quantity, product.totalprice, product.contract__c);\n            products.push(newProduct);\n          }\n          contract.products = products;\n        })\n      }\n    })\n  }\n\n  \n\n}\n","<mat-card class=\"contract-card\" *ngFor=\"let contract of contracts\">\n  <mat-card-header>\n    <mat-card-title>{{ contract.contractnumber }}</mat-card-title>\n    <mat-card-subtitle>{{ contract.status }}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-grid-list cols=\"2\" rowHeight=\"50px\">\n      <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Start date</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ contract.startdate | date }}</p></mat-grid-tile>\n      <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">End Date</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ contract.enddate | date }}</p></mat-grid-tile>\n    </mat-grid-list>\n\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let product of contract.products\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{ product.name }}\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-grid-list cols=\"2\" rowHeight=\"50px\">\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Quantity</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ product.quantity }}</p></mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Price</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ product.totalPrice | currency:'EUR' }}</p></mat-grid-tile>\n        </mat-grid-list>\n      </mat-expansion-panel>\n    </mat-accordion>\n    \n    \n  </mat-card-content>\n</mat-card>\n\n","import {NgModule} from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule }from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@NgModule({\n  imports: [\n  CommonModule, \n  MatToolbarModule,\n  MatButtonModule, \n  MatCardModule,\n  MatInputModule,\n  MatDialogModule,\n  MatTableModule,\n  MatMenuModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatGridListModule,\n  MatExpansionModule\n  ],\n  exports: [\n  CommonModule,\n   MatToolbarModule, \n   MatButtonModule, \n   MatCardModule, \n   MatInputModule, \n   MatDialogModule, \n   MatTableModule, \n   MatMenuModule,\n   MatIconModule,\n   MatProgressSpinnerModule,\n   MatGridListModule,\n   MatExpansionModule\n   ],\n})\nexport class CustomMaterialModule { }","import { Component, OnInit } from '@angular/core';\n\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material/dialog'\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  \n  constructor(private router: Router, private loginService: LoginService) { }\n\n  username: string;\n  password: string;\n\n  showSpinner: boolean;\n\n  ngOnInit(): void {\n  }\n\n  async login() : Promise<void> {\n    let id = await this.loginService.loginUser(this.username, this.password).toPromise();\n    console.log(id);\n    if(id !== 'Unauthorized' && id!== '{ \"Error\" : { \"title\": \"The parameters are not correct\"}}') {\n      localStorage.setItem('credential', id);\n      this.router.navigate(['/profile', id]);\n    } else {\n      alert('Bad credentials');\n    }\n  }\n\n}\n","<mat-card class=\"example-card\">\n  <mat-card-header>\n    <mat-card-title>Login</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form class=\"example-form\">\n      <table class=\"example-full-width\" cellspacing=\"0\">\n        <tr>\n          <td>\n            <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required>\n            </mat-form-field>\n          </td>\n        </tr>\n        <tr>\n        <td><mat-form-field class=\"example-full-width\">\n          <input matInput placeholder=\"Password\" [(ngModel)]=\"password\"type=\"password\" name=\"password\" required>\n        </mat-form-field></td>\n      </tr></table>\n    </form>\n    <mat-spinner [style.display]=\"showSpinner ? 'block' : 'none'\"></mat-spinner>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-raised-button (click)=\"login()\" color=\"primary\">Login</button>\n  </mat-card-actions>\n</mat-card>\n","import { User } from \"./user\";\n\nexport class Contract {\n\n  id: string;\n  contractnumber: string;\n  startdate: Date;\n  status: string;\n  user: User;\n  enddate: Date;\n\n  constructor(number?: string, startDate?: Date, termDate?: Date, status?: string) {\n    this.contractnumber = number;\n    this.startdate = startDate;\n    this.enddate = termDate;\n    this.status = status\n  }\n}","import { Contract } from \"./contract\";\n\nexport class Product {\n\n  id: string;\n  name: string;\n  contract: string;\n  quantity: number;\n  totalPrice: number;\n\n  constructor(name?: string, quantity?: number, totalPrice?: number, contract?: string) {\n    this.name = name;\n    this.quantity = quantity,\n    this.totalPrice = totalPrice,\n    this.contract = contract\n  }\n}","export class User {\n  [x: string]: string;\n\n  id: string;\n  name: string;\n  username: string;\n  email: string | null;\n  title: string | null;\n  phone: string | null;\n  mobile: string | null;\n\n  constructor(name?: string, username?: string, email?: string, title?: string, phone?: string, mobile?: string) {\n    this.name = name;\n    this.username = username;\n    this.email = email;\n    this.title = title;\n    this.phone = phone;\n    this.mobile = mobile;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>products works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../models/user';\n\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  id: string;\n  data: any;\n  user: User;\n  state: string;\n  profileForm: FormGroup;\n\n  constructor(private userService: UserService, private route: ActivatedRoute) {\n    this.user = new User();\n   }\n\n  ngOnInit(): void {\n    this.state = 'view';\n\n    this.route.params.subscribe(params => {\n      console.log('The id of this route is: ', params.id);\n      this.id = params.id;\n    });\n\n    this.userService.getContactById(this.id).toPromise()\n    .then((data) => {\n      console.log(data);\n      this.user = new User(data.name, data.username__c, data.email, data.title, data.homephone, data.mobilephone);\n      console.log(this.user);\n\n      this.profileForm = new FormGroup({\n        nameForm:new FormControl(this.user.name, Validators.required),\n        usernameForm:new FormControl(this.user.username, Validators.required),\n        titleForm:new FormControl(this.user.title),\n        emailForm:new FormControl(this.user.email, [Validators.required, Validators.email]),\n        phoneForm:new FormControl(this.user.phone),\n        mobileForm:new FormControl(this.user.mobile)\n      });\n\n\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n\n  editProfile() {\n    this.state = 'edit';\n    console.log('EDIT');\n  }\n\n  cancelEdit() {\n    this.state = 'view';\n  }\n\n  onSubmit() {\n\n    console.log(this.profileForm.value);\n    console.log(this.id);\n\n    this.userService.updateContact(this.id, this.profileForm.value).toPromise()\n    .then(() => {\n      this.user = {\n        id: this.id,\n        name: this.profileForm.value.name,\n        username: this.profileForm.value.usenrame,\n        title: this.profileForm.value.title,\n        email: this.profileForm.value.email,\n        phone: this.profileForm.value.phone,\n        mobile: this.profileForm.value.mobile\n      }\n      window.location.reload();\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n    console.log('submit');\n  }\n\n}\n","<mat-card class=\"example-card\">\n  <mat-card-header>\n    <mat-card-title>Your Profile</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <ng-template [ngIf]=\"state === 'view'\" [ngIfElse]=\"editState\">\n      <mat-grid-list cols=\"2\" rowHeight=\"50px\">\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Name</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ user.name }}</p></mat-grid-tile>\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Username</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\"><p class=\"value\">{{ user.username }}</p></mat-grid-tile>\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Title</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n          <ng-template [ngIf]=\"user.title !== null\" [ngIfElse]=\"nullTitle\"><p class=\"value\">{{ user.title }}</p></ng-template>\n          <ng-template #nullTitle><p class=\"nullValue\">[You can add your title]</p></ng-template>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Email</h4></mat-grid-tile><mat-grid-tile class=\"valunullVContainer\">\n          <ng-template [ngIf]=\"user.email !== null\" [ngIfElse]=\"nullemail\"><p class=\"value\">{{ user.email }}</p></ng-template>\n          <ng-template #nullemail><p class=\"nullValue\">[You can add your Email]</p></ng-template>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Phone</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n          <ng-template [ngIf]=\"user.phone !== null\" [ngIfElse]=\"nullphone\"><p class=\"value\">{{ user.phone }}</p></ng-template>\n          <ng-template #nullphone><p class=\"nullValue\">[You can add your Phone number]</p></ng-template>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Mobile</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n          <ng-template [ngIf]=\"user.mobile !== null\" [ngIfElse]=\"nullmobile\"><p class=\"value\">{{ user.mobile }}</p></ng-template>\n          <ng-template #nullmobile><p class=\"nullValue\">[You can add your Mobile number]</p></ng-template>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <mat-card-actions>\n        <button mat-raised-button class=\"editButton\" (click)=\"editProfile()\" color=\"primary\">Edit</button>\n      </mat-card-actions>\n    </ng-template>\n    <ng-template #editState>\n      <form class=\"contact-form\" [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-grid-list cols=\"2\" rowHeight=\"75px\">\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Name</h4></mat-grid-tile>\n          <mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Name\" formControlName=\"nameForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Username</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Username\" formControlName=\"usernameForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Title</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Title\" formControlName=\"titleForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Email</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Email\" formControlName=\"emailForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Phone</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Phone\" formControlName=\"phoneForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"titleContainer\"><h4 class=\"title\">Mobile</h4></mat-grid-tile><mat-grid-tile class=\"valueContainer\">\n            <mat-form-field appearance=\"standard\">\n              <input matInput  class=\"formField\" placeholder=\"Mobile\" formControlName=\"mobileForm\">\n            </mat-form-field>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <mat-card-actions class=\"actionForm\">\n          <div class=\"buttonsForm\">\n          <button mat-raised-button type=\"submit\" (click)=\"onSubmit()\" color=\"primary\">Save</button>\n          <button mat-raised-button (click)=\"cancelEdit()\" color=\"primary\">Cancel</button>\n          </div>\n        </mat-card-actions>\n      </form>\n    </ng-template>\n  </mat-card-content>\n</mat-card>\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { throwError} from 'rxjs';\nimport { retry, catchError} from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContractsService {\n\n  endpoint = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n  httpHeader = new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n\n  getAllContracts(userId) {\n    console.log(userId);\n    return this.httpClient.get(`${this.endpoint}/contracts/${userId}`,\n      { headers: this.httpHeader, responseType: \"json\" })\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      )\n  }\n\n  getProductsByContractId(contractId) {\n    console.log(contractId);\n    return this.httpClient.get(`${this.endpoint}/products/${contractId}`,\n    { headers: this.httpHeader, responseType: \"json\" })\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { retry, catchError} from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  endpoint = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n  httpHeader = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n  loginUser(username, password): Observable<string> {\n\n    const params = new HttpParams()\n      .set('username', `${username}`)\n      .set('password', `${password}`);\n\n      let check = false;\n\n    return this.httpClient.get<string>(this.endpoint + '/login', { headers: this.httpHeader, params, responseType: \"json\" })\n    .pipe(\n      retry(1),\n      catchError(this.handleError) // then handle the error\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { retry, catchError} from 'rxjs/operators';\nimport { Observable, throwError, Subscription } from 'rxjs';\nimport { User } from '../models/user';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  endpoint = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n  httpHeader = new HttpHeaders({\n    'Content-Type': 'application/json'\n  });\n\n  getContactById(id): Observable<User> {\n    \n    return this.httpClient.get<User>(this.endpoint + `/contact/${id}`, { headers: this.httpHeader, responseType: \"json\" })\n    .pipe(\n      retry(1),\n      catchError(this.handleError) // then handle the error\n    )\n  }\n\n  updateContact(id, user): Observable<User> {\n    console.log(id);\n    return this.httpClient.put<User>(`${this.endpoint}/contact/${id}`, \n    { \n      name: user.nameForm,\n      username: user.usernameForm,\n      title: user.titleForm,\n      email: user.emailForm,\n      phone: user.phoneForm,\n      mobile: user.mobileForm\n    },\n    { headers: this.httpHeader, responseType: \"json\" })\n    .pipe(\n      retry(1),\n      catchError(this.handleError) // then handle the error\n    )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}